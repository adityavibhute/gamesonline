NativeConnection {
  base: 
   Mongoose {
     connections: [ [Circular] ],
     models: { Todo: [Object] },
     modelSchemas: { Todo: [Object] },
     options: { pluralization: true },
     _pluralize: [Function: pluralize],
     plugins: [ [Object], [Object], [Object], [Object] ] },
  collections: 
   { todos: 
      NativeCollection {
        collection: [Object],
        opts: [Object],
        name: 'todos',
        collectionName: 'todos',
        conn: [Circular],
        queue: [],
        buffer: false,
        emitter: [Object] } },
  models: 
   { Todo: 
      { [Function: model]
        hooks: [Object],
        base: [Object],
        modelName: 'Todo',
        model: [Function: model],
        db: [Circular],
        discriminators: undefined,
        '$appliedMethods': true,
        '$appliedHooks': true,
        schema: [Object],
        collection: [Object],
        Query: [Object],
        '$__insertMany': [Function],
        '$init': [Object] } },
  config: { autoIndex: true },
  replica: false,
  hosts: null,
  host: '127.0.0.1',
  port: 27017,
  user: 'adiv',
  pass: 'test',
  name: 'employee',
  options: null,
  otherDbs: [],
  states: 
   { '0': 'disconnected',
     '1': 'connected',
     '2': 'connecting',
     '3': 'disconnecting',
     '99': 'uninitialized',
     disconnected: 0,
     connected: 1,
     connecting: 2,
     disconnecting: 3,
     uninitialized: 99 },
  _readyState: 1,
  _closeCalled: false,
  _hasOpened: true,
  _listening: false,
  _connectionOptions: { promiseLibrary: [Function: Promise] },
  '$initialConnection': 
   Promise {
     NativeConnection {
     base: [Object],
     collections: [Object],
     models: [Object],
     config: [Object],
     replica: false,
     hosts: null,
     host: '127.0.0.1',
     port: 27017,
     user: 'adiv',
     pass: 'test',
     name: 'employee',
     options: null,
     otherDbs: [],
     states: [Object],
     _readyState: 1,
     _closeCalled: false,
     _hasOpened: true,
     _listening: false,
     _connectionOptions: [Object],
     '$initialConnection': [Circular],
     db: [Object],
     client: [Object] } },
  db: 
   Db {
     domain: null,
     _events: { reconnect: [Function], close: [Function], timeout: [Function] },
     _eventsCount: 3,
     _maxListeners: undefined,
     s: 
      { databaseName: 'employee',
        dbCache: {},
        children: [],
        topology: [Object],
        options: [Object],
        logger: [Object],
        bson: BSON {},
        readPreference: [Object],
        bufferMaxEntries: -1,
        parentDb: null,
        pkFactory: undefined,
        nativeParser: undefined,
        promiseLibrary: [Function: Promise],
        noListener: false,
        readConcern: undefined },
     serverConfig: [Getter],
     bufferMaxEntries: [Getter],
     databaseName: [Getter] },
  client: 
   MongoClient {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined,
     s: 
      { url: 'mongodb://127.0.0.1:27017/employee',
        options: [Object],
        promiseLibrary: [Function: Promise],
        dbCache: [Object],
        sessions: [] },
     topology: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 23,
        _maxListeners: Infinity,
        clientInfo: [Object],
        s: [Object] } } }